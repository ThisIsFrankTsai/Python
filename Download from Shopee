#使用seleinum 爬取蝦皮(主要是因為有些盒子要用滑鼠滾動才會出現資訊)
#操作思路: 打開網頁 >全螢幕->找搜尋欄位 ->下關鍵字->滾動滑鼠->得到盒子的新資訊
#reference :https://www.itread01.com/content/1544483715.html

from selenium import webdriver #啟動driver
from selenium.webdriver.common.keys import Keys #模擬鍵盤使用
from selenium.webdriver.chrome.options import Options # 可以對網頁開啟時，做一些篩選，例如關閉自動翻譯、詢問
import time

#==================Explicit Waits=====(等待driver運作,直到某個特徵出現為止)========================
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC


#輸入(增加名稱,driver,向下滑多少像素,幾次)
def mouse_roll_and_crawl(title_list,driver,pix=500,run_time=8):
    global imgs #傳出去def 外
    for each_move in range(run_time):
        js=f'window.scrollBy(0,{pix})'
        driver.execute_script(js)
        print('滑鼠滾一次:')
        time.sleep(1)
        prods=driver.find_elements_by_class_name('_10Wbs-')
        imgs=driver.find_elements_by_class_name('_3-N5L6') #def內
        
        #print(imgs)
        
        for p in prods:
            t=p.text
            if t not in title_list: #重複的資料不要儲存
                title_list.append(t)
        
        for img in imgs:
            link=img.get_attribute('src') #類似bs4 get功能
            #print(link)
        time.sleep(1)
        print('每次滾完，新增數量:',len(title_list))
    
    print('已經滾完所有頁面了，為了確保有頁碼，所以網上滾一點點')
    js='window.scrollBy(0,-300)'
    driver.execute_script(js)


chrome_driver_path='./chromedriver.exe'
url='https://shopee.tw/'
item='包包'
opt= Options()
opt.add_argument('--disable-notifications') #禁止彈出詢問視窗
driver=webdriver.Chrome(chrome_driver_path,chrome_options=opt)
driver.get(url) #開啟url 
#放大全螢幕
driver.maximize_window()
WebDriverWait(driver,10).until(EC.presence_of_element_located((By.CLASS_NAME,'stardust-popover__target')))
#time.sleep(3) 固定等待
#彈性等待

#找搜尋欄位 並且輸入我們要的搜尋物件
#search=driver.find_element_by_class_name('shopee-searchbar-input__input') #類似bs4 find
search=driver.find_elements_by_class_name('shopee-searchbar-input__input') #找一堆 find all
keyin_bar=search[0]
keyin_bar.send_keys(item)
keyin_bar.send_keys(Keys.ENTER)
#彈性等待
WebDriverWait(driver,10).until(EC.presence_of_element_located((By.CLASS_NAME,'col-xs-2-4')))   #(driver,最多等待時間).(特徵)
print('end')

#商品文字盒子 class='_10Wbs-'
#prods=driver.find_elements_by_class_name('_10Wbs-')
#print(prods)
#prods[3].text  顯示文字

#往下滑，顯示更多的資訊

#js='window.scrollBy(0,500)' #(像素座標xy)
#driver.execute_script(js)
title_list=[]
mouse_roll_and_crawl(title_list,driver,pix=500,run_time=8)
time.sleep(1)

#page 變換建議 copy full xpath
for page in range(2,4):
    buttom_xpath=f'/html/body/div[1]/div/div[3]/div/div/div[2]/div[2]/div[3]/div/button[{page+1}]'
    driver.find_element_by_xpath(buttom_xpath).click() #用畫面的絕對位置,並且點擊
    #進入下一頁
    WebDriverWait(driver,10).until(EC.presence_of_element_located((By.CLASS_NAME,'_10Wbs-')))   #(driver,最多等待時間).(特徵)
    #成功跳轉下一頁
    mouse_roll_and_crawl(title_list,driver,pix=500,run_time=8)
    print(f'======================={page}頁完成爬取=========================')
